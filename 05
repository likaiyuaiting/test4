#include<stdio.h>
#include<stdlib.h>
#include<string.h>

int GetDigit(int n,int p)//取出整数n中第p位的数
{
    int i = 0;
    int t = 1;
    for(i=0; i<p; i++)
        t *= 10;
    return (n/t)%10;
}

//num为位数的个数,k为所有位上的数的最大数加1
int rxsort(int *arr,int sz,int num,int k)
{
    int *tmp = NULL;
    int *count = NULL;
    int i,j,n;

    if(!(tmp=(int*)malloc(sz*sizeof(int)))) return 0;   
    if(!(count = (int*)malloc(k*sizeof(int)))) return 0;

    for(j=0; j<num; j++)
    {
        for(i=0; i<k; i++)
            count[i] = 0;

        for(i=0; i<sz; i++)
        {
            n = GetDigit(arr[i],j);
            count[n] = count[n] + 1;
        }

        for(i=1; i<k; i++)
        {
            count[i] = count[i]+count[i-1];
        }

        for(i=sz-1; i>=0; i--)
        {
            n = GetDigit(arr[i],j);
            tmp[count[n] - 1] = arr[i];
            count[n] = count[n]-1;
        }   
    }

    memcpy(arr,tmp,sz*sizeof(int));

    free(tmp);
    free(count);
    return 1;
}

int main()
{
    int i;
    int arr[] = {324,16,728,162,666,233,250};
    int sz = sizeof(arr)/sizeof(arr[0]);

    for(i=0; i<sz; i++)
        printf("%d ",arr[i]);

    rxsort(arr,sz,3,9);

    printf("\n");
    for(i=0; i<sz; i++)
        printf("%d ",arr[i]);
    return 0;
}
